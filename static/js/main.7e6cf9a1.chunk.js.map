{"version":3,"sources":["components/Button.js","context/SettingsContext.js","components/CountdownAnimation.js","components/SetPomodoro.js","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","setCurrentTimer","active_state","stopAimate","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","name","parseInt","noValidate","onSubmit","e","preventDefault","onChange","type","App","useEffect","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e6cf9a1.chunk.js","sourcesContent":["const Button = ({ title, activeClass, _callback }) => {\r\n  return (\r\n    <button className={activeClass} onClick={_callback}>{title}</button>\r\n  )\r\n}\r\nexport default Button","\r\nimport { useState, createContext } from \"react\";\r\n\r\nexport const SettingsContext = createContext()\r\n\r\nfunction SettingsContextProvider(props) {\r\n\r\n  const [pomodoro, setPomodoro] = useState(0)\r\n  const [executing, setExecuting] = useState({})\r\n  const [startAnimate, setStartAnimate] = useState(false)\r\n\r\n  function setCurrentTimer(active_state) {\r\n    updateExecute({\r\n      ...executing,\r\n      active: active_state\r\n    })\r\n    setTimerTime(executing)\r\n  }\r\n\r\n  // start animation fn \r\n  function startTimer() {\r\n    setStartAnimate(true)\r\n  }\r\n  // pause animation fn \r\n  function pauseTimer() {\r\n    setStartAnimate(false)\r\n  }\r\n  // pass time to counter \r\n  const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60)\r\n    const seconds = remainingTime % 60\r\n\r\n    return `${minutes}:${seconds}`\r\n  }\r\n\r\n  // clear session storage \r\n  const SettingsBtn = () => {\r\n    setExecuting({})\r\n    setPomodoro(0)\r\n  }\r\n\r\n  const updateExecute = updatedSettings => {\r\n    setExecuting(updatedSettings)\r\n    setTimerTime(updatedSettings)\r\n  }\r\n\r\n  const setTimerTime = (evaluate) => {\r\n    switch (evaluate.active) {\r\n      case 'work':\r\n        setPomodoro(evaluate.work)\r\n        break;\r\n      case 'short':\r\n        setPomodoro(evaluate.short)\r\n        break;\r\n      case 'long':\r\n        setPomodoro(evaluate.long)\r\n        break;\r\n      default:\r\n        setPomodoro(0)\r\n        break;\r\n    }\r\n  }\r\n\r\n  function stopAimate() {\r\n    setStartAnimate(false)\r\n  }\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{\r\n      pomodoro,\r\n      executing,\r\n      updateExecute,\r\n      startAnimate,\r\n      startTimer,\r\n      pauseTimer,\r\n      children,\r\n      SettingsBtn,\r\n      setCurrentTimer,\r\n      stopAimate\r\n    }}>\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport default SettingsContextProvider","import { useContext } from 'react'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\nconst CountdownAnimation = ({ key, timer, animate, children }) => {\r\n\r\n  const { stopAimate } = useContext(SettingsContext)\r\n\r\n  return (\r\n    <CountdownCircleTimer\r\n      key={key}\r\n      isPlaying={animate}\r\n      duration={timer * 60}\r\n      colors={[\r\n        ['#FE6F6B', 0.33],\r\n        ['#FE6F6B', 0.33],\r\n        ['#FE6F6B', 0.33],\r\n      ]}\r\n      strokeWidth={6}\r\n      size={220}\r\n      trailColor=\"#151932\"\r\n      onComplete={() => {\r\n        stopAimate()\r\n      }}\r\n    >\r\n      {children}\r\n    </CountdownCircleTimer>\r\n  )\r\n}\r\n\r\nexport default CountdownAnimation","import React, { useContext, useState } from 'react'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\n\r\nconst SetPomodoro = () => {\r\n\r\n  const [newTimer, setNewTimer] = useState({\r\n    work: 0,\r\n    short: 0,\r\n    long: 0,\r\n    active: 'work'\r\n  })\r\n\r\n  const { updateExecute } = useContext(SettingsContext)\r\n\r\n  const handleChange = input => {\r\n    const { name, value } = input.target\r\n    switch (name) {\r\n      case 'work':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          work: parseInt(value)\r\n        })\r\n        break;\r\n      case 'shortBreak':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          short: parseInt(value)\r\n        })\r\n        break;\r\n      case 'longBreak':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          long: parseInt(value)\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    updateExecute(newTimer)\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <input className=\"input\" name=\"work\" onChange={handleChange} value={newTimer.work} />\r\n          <input className=\"input\" name=\"shortBreak\" onChange={handleChange} value={newTimer.short} />\r\n          <input className=\"input\" name=\"longBreak\" onChange={handleChange} value={newTimer.long} />\r\n        </div>\r\n        <button type='submit'>Set Timer</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetPomodoro","  \nimport React, { useEffect, useContext } from 'react'\nimport Button from './components/Button'\nimport CountdownAnimation from './components/CountdownAnimation'\nimport SetPomodoro from './components/SetPomodoro'\nimport { SettingsContext } from './context/SettingsContext'\n\nconst App = () => {\n\n  const {\n    pomodoro,\n    executing,\n    startAnimate,\n    children,\n    startTimer,\n    pauseTimer,\n    updateExecute,\n    setCurrentTimer,\n    SettingsBtn } = useContext(SettingsContext)\n\n    useEffect(() => {updateExecute(executing)}, [executing, startAnimate])\n\n  return (\n    <div className=\"container\">\n      <h1>Pomodoro</h1>\n      <small>Be productive the right way.</small>\n      {pomodoro !== 0 ?\n      <>\n        <ul className=\"labels\">\n          <li>\n            <Button \n              title=\"Work\" \n              activeClass={executing.active === 'work' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('work')} \n            />\n          </li>\n          <li>\n            <Button \n              title=\"Short Break\" \n              activeClass={executing.active === 'short' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('short')} \n            />\n          </li>\n          <li>\n            <Button \n              title=\"Long Break\" \n              activeClass={executing.active === 'long' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('long')} \n            />\n          </li>\n        </ul>\n        <Button title=\"Settings\" _callback={SettingsBtn} />\n        <div className=\"timer-container\">\n          <div className=\"time-wrapper\">\n              <CountdownAnimation\n                key={pomodoro} \n                timer={pomodoro} \n                animate={startAnimate}\n              >\n                {children}\n              </CountdownAnimation>\n          </div>\n        </div>\n        <div className=\"button-wrapper\">\n          <Button title=\"Start\" activeClass={!startAnimate ? 'active' : undefined} _callback={startTimer} />\n          <Button title=\"Pause\" activeClass={startAnimate ? 'active' : undefined} _callback={pauseTimer} />\n        </div>\n      </> : <SetPomodoro />}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SettingsContextProvider from './context/SettingsContext';\n\n\nReactDOM.render(\n  <SettingsContextProvider>\n    <App />\n  </SettingsContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}